{
  "name": "vinyl-buffer",
  "description": "Convert streaming vinyl files to use buffers",
  "version": "1.0.0",
  "main": "index.js",
  "dependencies": {
    "bl": "^0.9.1",
    "through2": "^0.6.1"
  },
  "devDependencies": {
    "tape": "~2.5.0",
    "vinyl-source-stream": "~0.1.1"
  },
  "scripts": {
    "test": "node test"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughsk.io/"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/vinyl-buffer"
  },
  "bugs": {
    "url": "https://github.com/hughsk/vinyl-buffer/issues"
  },
  "homepage": "https://github.com/hughsk/vinyl-buffer",
  "keywords": [
    "vinyl",
    "gulpfriendly",
    "convert",
    "buffer",
    "stream"
  ],
  "readme": "# vinyl-buffer [![Flattr this!](https://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=hughskennedy&url=http://github.com/hughsk/vinyl-buffer&title=vinyl-buffer&description=hughsk/vinyl-buffer%20on%20GitHub&language=en_GB&tags=flattr,github,javascript&category=software)[![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges) #\n\nConvert streaming [vinyl](http://github.com/wearefractal/vinyl) files to use\nbuffers.\n\nAn alternative to [gulp-streamify](http://github.com/nfroidure/gulp-streamify)\nthat you can pipe to, instead of being required to wrap your streams.\n\n``` javascript\nvar browserify = require('browserify')\nvar source = require('vinyl-source-stream')\nvar buffer = require('vinyl-buffer')\nvar uglify = require('gulp-uglify')\nvar size = require('gulp-size')\nvar gulp = require('gulp')\n\ngulp.task('build', function() {\n  var bundler = browserify('./index.js')\n\n  return bundler.pipe()\n    .pipe(source('index.js'))\n    .pipe(buffer())\n    .pipe(uglify())\n    .pipe(size())\n    .pipe(gulp.dest('dist/'))\n})\n```\n\n## Usage ##\n\n[![vinyl-buffer](https://nodei.co/npm/vinyl-buffer.png?mini=true)](https://nodei.co/npm/vinyl-buffer)\n\n### `vinylBuffer()` ###\n\nCreates a transform stream that takes vinyl files as input, and outputs\nmodified vinyl files as output. If `file.isStream()`, `file.contents` will\nbe converted to a `Buffer` before being emitted again â€“ otherwise, the file\nwill be emitted immediately.\n\n## License ##\n\nMIT. See [LICENSE.md](http://github.com/hughsk/vinyl-buffer/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "vinyl-buffer@1.0.0",
  "_from": "vinyl-buffer@^1.0.0"
}
