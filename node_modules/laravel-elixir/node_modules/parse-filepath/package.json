{
  "name": "parse-filepath",
  "description": "Parse a filepath into an object, yielding predictable results for basename and extname.",
  "version": "0.5.0",
  "homepage": "https://github.com/jonschlinkert/parse-filepath",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/parse-filepath.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/parse-filepath/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jonschlinkert/parse-filepath/blob/master/LICENSE-MIT"
    }
  ],
  "keywords": [
    "basename",
    "dir",
    "dirname",
    "ext",
    "extname",
    "filepath",
    "name",
    "object",
    "path"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.8"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "devDependencies": {
    "mocha": "~1.18.2",
    "should": "^4.0.4"
  },
  "dependencies": {
    "path-ends-with": "^0.2.1"
  },
  "readme": "# parse-filepath [![NPM version](https://badge.fury.io/js/parse-filepath.svg)](http://badge.fury.io/js/parse-filepath)\n\n> Parse a filepath into an object, yielding predictable results for basename and extname.\n\n## Install\n### Install with [npm](npmjs.org)\n\n```bash\nnpm i parse-filepath --save\n```\n\n## Usage\n\n```js\nvar parsePath = require('parse-filepath');\nparsePath('foo/bar/baz/index.md.html');\n\n// returns\n{\n  name: 'index',\n  dirname: 'foo/bar/baz',\n  extname: '.md.html',\n  basename: 'index.md.html',\n  extSegments: ['.md', '.html']\n}\n```\n\n## Differences from node.js path\n\nGiven the following string:\n\n```js\nvar str = 'foo/bar/baz/quux.min.js';\n```\n\n#### .basename\n\nNode.js:\n\n* `path.basename(str)` => `quux.min.js`\n* `path.basename(str, path.extname(str))` => `quux.min` **whaaaaa!?**\n\nparse-filepath:\n\n* `parsePath(str).basename` => `quux.min.js`\n* `parsePath(str).name` => `quux`\n\n\n#### .extname\n\nNode.js:\n\n* `path.extname(str)` => `.js`\n\nparse-filepath\n\n* `parsePath(str).extname` => `.min.js`\n\n\n#### .dotfiles\n\nAs an example, `.travis.yml` is parsed to:\n\n```js\n{\n  name: 'travis',\n  dirname: '.',\n  extname: '.yml',\n  basename: '.travis.yml',\n  extSegments: ['.yml']\n}\n```\n\nAnd `.gitignore` is parsed to:\n\n```js\n{\n  name: 'gitignore',\n  dirname: '.',\n  extname: '',\n  basename: '.gitignore',\n  extSegments: []\n}\n```\n\n## Author\n\n**Jon Schlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2014 Jon Schlinkert  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb](https://github.com/assemble/verb) on November 13, 2014._",
  "readmeFilename": "README.md",
  "_id": "parse-filepath@0.5.0",
  "_from": "parse-filepath@^0.5.0"
}
